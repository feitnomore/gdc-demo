apiVersion: v1
kind: Namespace
metadata:
  name: vm-system-public
  labels:
    app: vm-console

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vm-console
  namespace: vm-system-public
  labels:
    app: vm-console

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vm-console
rules:
  - apiGroups: [""]
    resources: ["nodes", "namespaces", "pods"]
    verbs: ["get", "list"]
  - apiGroups: ["kubevirt.io"]
    resources: ["virtualmachines", "virtualmachineinstances"]
    verbs: ["*"]
  - apiGroups: ["subresources.kubevirt.io"]
    resources: ["*"]
    verbs: ["get", "list", "update", "patch"]
  - apiGroups: ["instancetype.kubevirt.io"]
    resources: ["*"]
    verbs: ["get", "list"]
  - apiGroups: ["vm.cluster.gke.io"]
    resources: ["virtualmachines", "virtualmachinedisks"]
    verbs: ["get", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vm-console
  labels:
    app: kubevirt-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vm-console
subjects:
- kind: ServiceAccount
  name: vm-console
  namespace: vm-system-public

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vm-console-auth-config
  namespace: vm-system-public
  labels:
    app: vm-console
data:
  basicauth.conf: |
    auth_basic "Restricted Content";
    auth_basic_user_file /etc/nginx/secret.d/.htpasswd;

---
apiVersion: v1
kind: Secret
metadata:
  name: vm-console-auth-secret
  namespace: vm-system-public
  labels:
    app: vm-console
data:
  .htpasswd: YWRtaW46JGFwcjEkLnBlQzFkdW4kVWJsT3VEZS9Bb3JJekdIOXR2ZFFILwoK 

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vm-console
  namespace: vm-system-public
  labels:
    app: vm-console
spec:
  selector:
    matchLabels:
      app: vm-console
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: vm-console
    spec:
      containers:
        - name: nginx
          image: us-east1-docker.pkg.dev/parisim-default-labs/docker-repo/vm-console:latest
          imagePullPolicy: IfNotPresent
          ports:
          - name: http
            containerPort: 8080
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 10000
            runAsGroup: 30000
          volumeMounts:
          - name: cache-volume
            mountPath: /var/cache/nginx
          - name: run-volume
            mountPath: /var/run
          - name: auth-config
            mountPath: /etc/nginx/auth.d/
          - name: auth-secret
            mountPath: /etc/nginx/secret.d/
      serviceAccountName: vm-console
      restartPolicy: Always
      volumes:
        - name: cache-volume
          emptyDir: {}
        - name: run-volume
          emptyDir: {}
        - name: auth-config
          configMap:
            name: vm-console-auth-config
            optional: true
        - name: auth-secret
          secret:
            secretName: vm-console-auth-secret
            optional: true

---
apiVersion: v1
kind: Service
metadata:
  name: vm-console
  namespace: vm-system-public
  labels:
    app: vm-console
spec:
  type: ClusterIP
  selector:
    app: vm-console
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080

